// Copyright 2022 The go-ethereum Authors
// This file is part of the go-ethereum library.
//
// The go-ethereum library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The go-ethereum library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the go-ethereum library. If not, see <http://www.gnu.org/licenses/>.

package bind

import "text/template"

// A BindOption modifies the default behaviour of Bind().
type BindOption interface {
	// isBindOption is deliberately not exported as Bind() only supports the
	// options defined within this package so we don't want externally
	// defined ones to be accepted by the function.
	isBindOption()
}

// WithTemplate overrides the default language-specific template for code
// generated by Bind().
func WithTemplate(text string) BindOption {
	return customTemplate(text)
}

type customTemplate string

func (customTemplate) isBindOption() {}

// WithTemplateFuncs appends the FuncMap to the functions already used when
// executing the template for code generated by Bind(). If the name of a
// function mirrors one already used by default, it will override the default
// behaviour.
func WithTemplateFuncs(funcs template.FuncMap) BindOption {
	return extraTemplateFuncs(funcs)
}

type extraTemplateFuncs template.FuncMap

func (extraTemplateFuncs) isBindOption() {}
